name: "gcp-storage"

on:
  push:
    paths:
    - 'terraform-gcp/Cloud-Storage/**'
  
    branches:
      - main
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  terraform:
    env:
        
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        PROJECT_ID: ${{ secrets.GCP_PROJECT }}
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
        TF_VAR_credentials: ${{ secrets.GCP_SA_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}
        TF_VAR_zone: ${{ secrets.ZONE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
    name: "Terraform"
    environment: 'terraform-apply'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [terrafrom-gcp/Cloud-Storage]
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}
      
      - name: export json
        run: |
          echo "$GCP_SA_KEY"  > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json
          terraform init
     
      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
      #  if: github.event_name == 'pull_request'
        run: |
          echo "$GCP_SA_KEY"  > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json 
          terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
       # if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        if: github.ref == 'refs/heads/main'
        run: |
          echo "$GCP_SA_KEY"  > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json
          terraform apply -auto-approve
  
  

  terraform-destroy:
    env:
        
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        PROJECT_ID: ${{ secrets.GCP_PROJECT }}
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT }}
        TF_VAR_credentials: ${{ secrets.GCP_SA_KEY }}
        TF_VAR_region: ${{ secrets.REGION }}
        TF_VAR_zone: ${{ secrets.ZONE }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
    name: "terraform-destroy"
    runs-on: ubuntu-latest
    environment: 'terraform-destroy'
    strategy:
      matrix:
        working-directory: [terrafrom-gcp/Cloud-Storage]
    defaults:
      run:
        working-directory: ${{ matrix.working-directory }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: terraform init
        run: |
          echo "$GCP_SA_KEY"  > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json
          terraform init
      - name: Terraform Destroy
       # if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        if: github.ref == 'refs/heads/main'
        run: |
          echo "$GCP_SA_KEY"  > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json
          terraform destroy -auto-approve